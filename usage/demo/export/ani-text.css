@charset "UTF-8";
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: huina.gu
 * Time: 2015.2.6
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: huina.gu
 * Time: 2015.2.6
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/core/reset.scss
 * Global Classes 约定常规解决方案
 * Author: huina.gu
 * Time: 2015.2.6
 * Note: only for mobile
 */
*,
::before,
::after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent; }

html {
  background-color: #fafafa;
  color: #212121;
  font-size: 100px;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none; }

body {
  margin: 0;
  font-size: 14px;
  line-height: 1.5;
  font-family: Helvetica Neue, Helvetica, STHeiTi, sans-serif; }

ul, ol, dl, dd, h1, h2, h3, h4, h5, h6, figure, form, fieldset, legend, input, textarea, button, p, blockquote, th, td, pre, xmp {
  margin: 0;
  padding: 0; }

input, textarea, button, select, pre, tt, code, kbd, samp, optgroup, option {
  line-height: inherit;
  font-family: inherit; }

h1, h2, h3, h4, h5, h6, input, textarea, button, select, small, big {
  font-size: inherit; }

address, cite, dfn, em, i, optgroup, var {
  font-style: normal; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  text-align: left; }

caption, th {
  text-align: inherit; }

ul, ol, menu {
  list-style: none; }

fieldset, img {
  border: 0; }

img {
  vertical-align: top; }

article, aside, details, figcaption, figure, footer, header, main, menu, nav, section, summary {
  display: block; }

audio, canvas, video {
  display: inline-block; }

blockquote:before, blockquote:after, q:before, q:after {
  content: "\0020"; }

textarea, pre {
  overflow: auto; }

textarea {
  resize: vertical; }

textarea, input, button, a {
  outline: 0; }

textarea, input, button {
  color: inherit; }
  textarea:disabled, input:disabled, button:disabled {
    opacity: 1; }

button::-moz-focus-inner, input::-moz-focus-inner {
  padding: 0;
  border: 0; }

input[type="button"], input[type="submit"], input[type="reset"], input[type="file"]::-webkit-file-upload-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

mark {
  background-color: transparent; }

a, ins, s, u, del {
  text-decoration: none; }

a, img {
  -webkit-touch-callout: none; }

a {
  color: #00afc7; }

.g-clear::after, .g-mod::after {
  display: block;
  overflow: hidden;
  clear: both;
  height: 0;
  content: "\0020"; }

@font-face {
  font-family: fontawesome-webfont;
  src: url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.eot);
  src: url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.eot?#iefix) format("embedded-opentype"), url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.woff) format("woff"), url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.ttf) format("truetype"), url(http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.svg#iconfont) format("svg"); }
.yo-ico {
  font-family: fontawesome-webfont !important;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -webkit-text-stroke-width: .1px;
  -moz-osx-font-smoothing: grayscale;
  vertical-align: middle; }

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: huina.gu
 * Time: 2015.2.6
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: huina.gu
 * Time: 2015.2.6
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/layout/classes.scss
 * Global Layout Classes 约定布局方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * document: doc
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method doc
 * @param {String} $name 定义page-name
 * @param {String} $fixed 定义头尾是否固定
 * @param {Length} $hd-gap 定义主体到viewport顶部的距离
 * @param {Length} $ft-gap 定义主体到viewport底部的距离
 */
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: huina.gu
 * Time: 2015.2.6
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: huina.gu
 * Time: 2015.2.6
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/layout/classes.scss
 * Global Layout Classes 约定布局方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Layout: gu-stacked
 * Author: joy.du(飘零雾雨)
 * Edit: 2015.1.15
 -----------------------
 * @method stacked
 * variables length(2)
 * @param {defailt | String} $name 定义名称
 * @param {defailt | Color} $margin 定义外边距
 */
.gu-stacked {
  display: block;
  margin: 0.2rem 0.1rem; }
  .gu-stacked::after {
    display: block;
    overflow: hidden;
    clear: both;
    height: 0;
    content: "\0020"; }

/**
* document layout
* Author: joy.du(飘零雾雨)
* Time: 2013.10.17
*/
/**
 * module: m-demo
 * Author: joy.du(飘零雾雨)
 * Time: 2013.10.17
 */
@media screen and (min-width: 800px) {
  .m-demo {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    margin: .1rem; } }
.m-demo .device .stage {
  position: relative;
  height: 5.68rem; }
@media screen and (min-width: 800px) {
  .m-demo .device {
    position: relative;
    width: 3.66rem;
    height: 7.83rem;
    border: .05rem solid #505559;
    border-radius: .55rem;
    background-color: #313538; }
    .m-demo .device::before, .m-demo .device::after {
      position: absolute;
      left: 50%;
      -webkit-transform: translate(-50%);
      -moz-transform: translate(-50%);
      transform: translate(-50%);
      content: "\0020"; }
    .m-demo .device::before {
      top: .58rem;
      width: .68rem;
      height: .08rem;
      border-radius: 4px;
      background-color: #3e4243; }
    .m-demo .device::after {
      bottom: .18rem;
      width: 0.65rem;
      height: 0.65rem;
      border: .05rem solid #3e4243;
      border-radius: 50%; }
    .m-demo .device .stage {
      top: .99rem;
      left: .18rem;
      width: 3.20rem;
      background-color: #fff; }
      .m-demo .device .stage, .m-demo .device .stage::before {
        position: absolute; }
      .m-demo .device .stage::before {
        top: -.68rem;
        left: 50%;
        -webkit-transform: translate(-50%);
        -moz-transform: translate(-50%);
        transform: translate(-50%);
        width: 0.1rem;
        height: 0.1rem;
        border-radius: 50%;
        background-color: #3e4243;
        box-shadow: -.5rem .26rem #3e4243;
        content: "\0020"; } }
.m-demo .code {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  flex: 1;
  display: block;
  width: 100%;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  -webkit-user-select: text;
  -moz-user-select: text;
  user-select: text;
  margin: .1rem 0;
  border-width: .04rem 0 .04rem 0;
  border-style: solid;
  border-color: #D7DBE4;
  padding: .1rem;
  background-color: #F0F3F8;
  font-family: Monaco, Menlo, Consolas, "Courier New", monospace; }
  @media screen and (min-width: 800px) {
    .m-demo .code {
      margin: .1rem;
      border-width: 0 0 0 .04rem; } }
  .m-demo .code h3 {
    margin-top: .1rem; }

/**
 * module: m-code
 * Author: joy.du(飘零雾雨)
 * Time: 2013.10.17
 */
.m-code {
  margin: 10px;
  padding: 10px;
  border-radius: 5px;
  background: #272822;
  color: #51bbe1;
  font-size: 20px; }
  .m-code .method {
    color: #93de08; }
  .m-code .bracket,
  .m-code .colon {
    padding-right: 5px;
    color: #fff; }
  .m-code mark {
    background: none;
    color: #ccc;
    font-size: 16px; }

*, *:after, *:before {
  box-sizing: border-box; }

.page {
  width: 100%;
  height: 100%;
  background: #F0544F;
  color: #fff;
  font-family: 'Poiret One', sans-serif;
  overflow: hidden; }

.page {
  display: flex;
  transform-style: preserve-3d;
  -webkit-perspective: 30em;
  perspective: 30em; }

.sentence {
  pointer-events: none;
  transform: translateZ(0);
  margin: auto;
  transform-style: preserve-3d;
  font-size: 4em;
  color: #f0f0f0;
  text-align: center;
  -webkit-box-reflect: below -1em -webkit-gradient(linear, left top, left bottom, from(transparent), to(rgba(255, 255, 255, 0.4))); }
  .sentence span {
    -webkit-animation: seawave 2s linear infinite alternate;
    animation: seawave 2s linear infinite alternate;
    opacity: 0; }
  .sentence h1 {
    font-weight: bold;
    font-family: 'Courgette', sans-serif; }
  .sentence h2 {
    font-weight: thin;
    font-family: 'Poiret One', sans-serif; }
  .sentence h1 span:nth-child(1) {
    -webkit-animation-delay: 0.025s;
    animation-delay: 0.025s; }
  .sentence h1 span:nth-child(2) {
    -webkit-animation-delay: 0.05s;
    animation-delay: 0.05s; }
  .sentence h1 span:nth-child(3) {
    -webkit-animation-delay: 0.075s;
    animation-delay: 0.075s; }
  .sentence h1 span:nth-child(4) {
    -webkit-animation-delay: 0.1s;
    animation-delay: 0.1s; }
  .sentence h1 span:nth-child(5) {
    -webkit-animation-delay: 0.125s;
    animation-delay: 0.125s; }
  .sentence h1 span:nth-child(6) {
    -webkit-animation-delay: 0.15s;
    animation-delay: 0.15s; }
  .sentence h1 span:nth-child(7) {
    -webkit-animation-delay: 0.175s;
    animation-delay: 0.175s; }
  .sentence h1 span:nth-child(8) {
    -webkit-animation-delay: 0.2s;
    animation-delay: 0.2s; }
  .sentence h1 span:nth-child(9) {
    -webkit-animation-delay: 0.225s;
    animation-delay: 0.225s; }
  .sentence h1 span:nth-child(10) {
    -webkit-animation-delay: 0.25s;
    animation-delay: 0.25s; }
  .sentence h1 span:nth-child(11) {
    -webkit-animation-delay: 0.275s;
    animation-delay: 0.275s; }
  .sentence h1 span:nth-child(12) {
    -webkit-animation-delay: 0.3s;
    animation-delay: 0.3s; }
  .sentence h1 span:nth-child(13) {
    -webkit-animation-delay: 0.325s;
    animation-delay: 0.325s; }
  .sentence h1 span:nth-child(14) {
    -webkit-animation-delay: 0.35s;
    animation-delay: 0.35s; }
  .sentence h1 span:nth-child(15) {
    -webkit-animation-delay: 0.375s;
    animation-delay: 0.375s; }
  .sentence h2 span:nth-child(1) {
    -webkit-animation-delay: 0.55s;
    animation-delay: 0.55s; }
  .sentence h2 span:nth-child(2) {
    -webkit-animation-delay: 0.6s;
    animation-delay: 0.6s; }
  .sentence h2 span:nth-child(3) {
    -webkit-animation-delay: 0.65s;
    animation-delay: 0.65s; }
  .sentence h2 span:nth-child(4) {
    -webkit-animation-delay: 0.7s;
    animation-delay: 0.7s; }
  .sentence h2 span:nth-child(5) {
    -webkit-animation-delay: 0.75s;
    animation-delay: 0.75s; }
  .sentence h2 span:nth-child(6) {
    -webkit-animation-delay: 0.8s;
    animation-delay: 0.8s; }
  .sentence h2 span:nth-child(7) {
    -webkit-animation-delay: 0.85s;
    animation-delay: 0.85s; }
  .sentence h2 span:nth-child(8) {
    -webkit-animation-delay: 0.9s;
    animation-delay: 0.9s; }
  .sentence h2 span:nth-child(9) {
    -webkit-animation-delay: 0.95s;
    animation-delay: 0.95s; }
  .sentence h2 span:nth-child(10) {
    -webkit-animation-delay: 1s;
    animation-delay: 1s; }
  .sentence h2 span:nth-child(11) {
    -webkit-animation-delay: 1.05s;
    animation-delay: 1.05s; }
  .sentence h2 span:nth-child(12) {
    -webkit-animation-delay: 1.1s;
    animation-delay: 1.1s; }
  .sentence h2 span:nth-child(13) {
    -webkit-animation-delay: 1.15s;
    animation-delay: 1.15s; }
  .sentence h2 span:nth-child(14) {
    -webkit-animation-delay: 1.2s;
    animation-delay: 1.2s; }
  .sentence h2 span:nth-child(15) {
    -webkit-animation-delay: 1.25s;
    animation-delay: 1.25s; }
  .sentence h2 span:nth-child(16) {
    -webkit-animation-delay: 1.3s;
    animation-delay: 1.3s; }
  .sentence h2 span:nth-child(17) {
    -webkit-animation-delay: 1.35s;
    animation-delay: 1.35s; }
  .sentence h2 span:nth-child(18) {
    -webkit-animation-delay: 1.4s;
    animation-delay: 1.4s; }
  .sentence h2 span:nth-child(19) {
    -webkit-animation-delay: 1.45s;
    animation-delay: 1.45s; }
  .sentence h2 span:nth-child(20) {
    -webkit-animation-delay: 1.5s;
    animation-delay: 1.5s; }
  .sentence h2 span:nth-child(21) {
    -webkit-animation-delay: 1.55s;
    animation-delay: 1.55s; }
  .sentence h2 span:nth-child(22) {
    -webkit-animation-delay: 1.6s;
    animation-delay: 1.6s; }

@-webkit-keyframes seawave {
  0% {
    -webkit-transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  1.666667% {
    -webkit-transform: matrix3d(0.19514, 0, 0, 0, 0, 0.19514, 0, 0, 0, 0, 1, 0, 0, -3.8179, 0, 1); }
  3.333333% {
    -webkit-transform: matrix3d(0.48061, 0, 0, 0, 0, 0.48061, 0, 0, 0, 0, 1, 0, 0, -16.89184, 0, 1); }
  5% {
    -webkit-transform: matrix3d(0.78868, 0, 0, 0, 0, 0.78868, 0, 0, 0, 0, 1, 0, 0, -35.82897, 0, 1); }
  6.666667% {
    -webkit-transform: matrix3d(1.06298, 0, 0, 0, 0, 1.06298, 0, 0, 0, 0, 1, 0, 0, -54.24398, 0, 1); }
  8.333333% {
    -webkit-transform: matrix3d(1.26541, 0, 0, 0, 0, 1.26541, 0, 0, 0, 0, 1, 0, 0, -67.42532, 0, 1); }
  10% {
    -webkit-transform: matrix3d(1.37835, 0, 0, 0, 0, 1.37835, 0, 0, 0, 0, 1, 0, 0, -73.79667, 0, 1); }
  11.666667% {
    -webkit-transform: matrix3d(1.40302, 0, 0, 0, 0, 1.40302, 0, 0, 0, 0, 1, 0, 0, -74.15221, 0, 1); }
  13.333333% {
    opacity: 1;
    -webkit-transform: matrix3d(1.35507, 0, 0, 0, 0, 1.35507, 0, 0, 0, 0, 1, 0, 0, -70.32855, 0, 1); }
  15% {
    -webkit-transform: matrix3d(1.25874, 0, 0, 0, 0, 1.25874, 0, 0, 0, 0, 1, 0, 0, -64.25506, 0, 1); }
  16.666667% {
    -webkit-transform: matrix3d(1.14088, 0, 0, 0, 0, 1.14088, 0, 0, 0, 0, 1, 0, 0, -57.53621, 0, 1); }
  18.333333% {
    -webkit-transform: matrix3d(1.02595, 0, 0, 0, 0, 1.02595, 0, 0, 0, 0, 1, 0, 0, -51.35907, 0, 1); }
  20% {
    -webkit-transform: matrix3d(0.93241, 0, 0, 0, 0, 0.93241, 0, 0, 0, 0, 1, 0, 0, -46.51039, 0, 1); }
  21.666667% {
    -webkit-transform: matrix3d(0.87106, 0, 0, 0, 0, 0.87106, 0, 0, 0, 0, 1, 0, 0, -43.40452, 0, 1); }
  23.333333% {
    -webkit-transform: matrix3d(0.84491, 0, 0, 0, 0, 0.84491, 0, 0, 0, 0, 1, 0, 0, -42.11433, 0, 1); }
  25% {
    -webkit-transform: matrix3d(0.85043, 0, 0, 0, 0, 0.85043, 0, 0, 0, 0, 1, 0, 0, -42.42524, 0, 1); }
  26.666667% {
    -webkit-transform: matrix3d(0.87962, 0, 0, 0, 0, 0.87962, 0, 0, 0, 0, 1, 0, 0, -43.92027, 0, 1); }
  28.333333% {
    -webkit-transform: matrix3d(0.92232, 0, 0, 0, 0, 0.92232, 0, 0, 0, 0, 1, 0, 0, -46.08478, 0, 1); }
  30% {
    -webkit-transform: matrix3d(0.96839, 0, 0, 0, 0, 0.96839, 0, 0, 0, 0, 1, 0, 0, -48.40959, 0, 1); }
  31.666667% {
    -webkit-transform: matrix3d(1.00942, 0, 0, 0, 0, 1.00942, 0, 0, 0, 0, 1, 0, 0, -50.47334, 0, 1); }
  33.333333% {
    -webkit-transform: matrix3d(1.0397, 0, 0, 0, 0, 1.0397, 0, 0, 0, 0, 1, 0, 0, -51.99258, 0, 1); }
  35% {
    -webkit-transform: matrix3d(1.05659, 0, 0, 0, 0, 1.05659, 0, 0, 0, 0, 1, 0, 0, -52.83794, 0, 1); }
  36.666667% {
    -webkit-transform: matrix3d(1.06028, 0, 0, 0, 0, 1.06028, 0, 0, 0, 0, 1, 0, 0, -53.02083, 0, 1); }
  38.333333% {
    -webkit-transform: matrix3d(1.05311, 0, 0, 0, 0, 1.05311, 0, 0, 0, 0, 1, 0, 0, -52.65993, 0, 1); }
  40% {
    -webkit-transform: matrix3d(1.0387, 0, 0, 0, 0, 1.0387, 0, 0, 0, 0, 1, 0, 0, -51.93743, 0, 1); }
  41.666667% {
    -webkit-transform: matrix3d(1.02107, 0, 0, 0, 0, 1.02107, 0, 0, 0, 0, 1, 0, 0, -51.05459, 0, 1); }
  43.333333% {
    -webkit-transform: matrix3d(1.00388, 0, 0, 0, 0, 1.00388, 0, 0, 0, 0, 1, 0, 0, -50.19419, 0, 1); }
  45% {
    -webkit-transform: matrix3d(0.98989, 0, 0, 0, 0, 0.98989, 0, 0, 0, 0, 1, 0, 0, -49.4943, 0, 1); }
  46.666667% {
    -webkit-transform: matrix3d(0.98072, 0, 0, 0, 0, 0.98072, 0, 0, 0, 0, 1, 0, 0, -49.03539, 0, 1); }
  48.333333% {
    -webkit-transform: matrix3d(0.9768, 0, 0, 0, 0, 0.9768, 0, 0, 0, 0, 1, 0, 0, -48.83983, 0, 1); }
  50% {
    -webkit-transform: matrix3d(0.97763, 0, 0, 0, 0, 0.97763, 0, 0, 0, 0, 1, 0, 0, -48.88146, 0, 1); }
  51.666667% {
    -webkit-transform: matrix3d(0.98199, 0, 0, 0, 0, 0.98199, 0, 0, 0, 0, 1, 0, 0, -49.09973, 0, 1); }
  53.333333% {
    -webkit-transform: matrix3d(0.98838, 0, 0, 0, 0, 0.98838, 0, 0, 0, 0, 1, 0, 0, -49.41905, 0, 1); }
  55% {
    -webkit-transform: matrix3d(0.99527, 0, 0, 0, 0, 0.99527, 0, 0, 0, 0, 1, 0, 0, -49.76363, 0, 1); }
  56.666667% {
    -webkit-transform: matrix3d(1.00141, 0, 0, 0, 0, 1.00141, 0, 0, 0, 0, 1, 0, 0, -50.07044, 0, 1); }
  58.333333% {
    -webkit-transform: matrix3d(1.00594, 0, 0, 0, 0, 1.00594, 0, 0, 0, 0, 1, 0, 0, -50.29687, 0, 1); }
  60% {
    -webkit-transform: matrix3d(1.00846, 0, 0, 0, 0, 1.00846, 0, 0, 0, 0, 1, 0, 0, -50.4232, 0, 1); }
  61.666667% {
    -webkit-transform: matrix3d(1.00902, 0, 0, 0, 0, 1.00902, 0, 0, 0, 0, 1, 0, 0, -50.4508, 0, 1); }
  63.333333% {
    -webkit-transform: matrix3d(1.00794, 0, 0, 0, 0, 1.00794, 0, 0, 0, 0, 1, 0, 0, -50.39716, 0, 1); }
  65% {
    -webkit-transform: matrix3d(1.00579, 0, 0, 0, 0, 1.00579, 0, 0, 0, 0, 1, 0, 0, -50.28941, 0, 1); }
  66.666667% {
    -webkit-transform: matrix3d(1.00315, 0, 0, 0, 0, 1.00315, 0, 0, 0, 0, 1, 0, 0, -50.15758, 0, 1); }
  68.333333% {
    -webkit-transform: matrix3d(1.00058, 0, 0, 0, 0, 1.00058, 0, 0, 0, 0, 1, 0, 0, -50.02902, 0, 1); }
  70% {
    -webkit-transform: matrix3d(0.99849, 0, 0, 0, 0, 0.99849, 0, 0, 0, 0, 1, 0, 0, -49.9244, 0, 1); }
  71.666667% {
    -webkit-transform: matrix3d(0.99712, 0, 0, 0, 0, 0.99712, 0, 0, 0, 0, 1, 0, 0, -49.85578, 0, 1); }
  73.333333% {
    -webkit-transform: matrix3d(0.99653, 0, 0, 0, 0, 0.99653, 0, 0, 0, 0, 1, 0, 0, -49.82653, 0, 1); }
  75% {
    -webkit-transform: matrix3d(0.99665, 0, 0, 0, 0, 0.99665, 0, 0, 0, 0, 1, 0, 0, -49.8327, 0, 1); }
  76.666667% {
    -webkit-transform: matrix3d(0.99731, 0, 0, 0, 0, 0.99731, 0, 0, 0, 0, 1, 0, 0, -49.86535, 0, 1); }
  78.333333% {
    -webkit-transform: matrix3d(0.99826, 0, 0, 0, 0, 0.99826, 0, 0, 0, 0, 1, 0, 0, -49.91311, 0, 1); }
  80% {
    -webkit-transform: matrix3d(0.99929, 0, 0, 0, 0, 0.99929, 0, 0, 0, 0, 1, 0, 0, -49.96465, 0, 1); }
  81.666667% {
    -webkit-transform: matrix3d(1.00021, 0, 0, 0, 0, 1.00021, 0, 0, 0, 0, 1, 0, 0, -50.01054, 0, 1); }
  83.333333% {
    -webkit-transform: matrix3d(1.00089, 0, 0, 0, 0, 1.00089, 0, 0, 0, 0, 1, 0, 0, -50.0444, 0, 1); }
  85% {
    -webkit-transform: matrix3d(1.00127, 0, 0, 0, 0, 1.00127, 0, 0, 0, 0, 1, 0, 0, -50.0633, 0, 1); }
  86.666667% {
    -webkit-transform: matrix3d(1.00135, 0, 0, 0, 0, 1.00135, 0, 0, 0, 0, 1, 0, 0, -50.06743, 0, 1); }
  88.333333% {
    -webkit-transform: matrix3d(1.00119, 0, 0, 0, 0, 1.00119, 0, 0, 0, 0, 1, 0, 0, -50.0594, 0, 1); }
  90% {
    -webkit-transform: matrix3d(1.00087, 0, 0, 0, 0, 1.00087, 0, 0, 0, 0, 1, 0, 0, -50.04329, 0, 1); }
  91.666667% {
    -webkit-transform: matrix3d(1.00047, 0, 0, 0, 0, 1.00047, 0, 0, 0, 0, 1, 0, 0, -50.02357, 0, 1); }
  93.333333% {
    -webkit-transform: matrix3d(1.00009, 0, 0, 0, 0, 1.00009, 0, 0, 0, 0, 1, 0, 0, -50.00434, 0, 1); }
  95% {
    -webkit-transform: matrix3d(0.99977, 0, 0, 0, 0, 0.99977, 0, 0, 0, 0, 1, 0, 0, -49.98869, 0, 1); }
  96.666667% {
    -webkit-transform: matrix3d(0.99957, 0, 0, 0, 0, 0.99957, 0, 0, 0, 0, 1, 0, 0, -49.97843, 0, 1); }
  98.333333% {
    -webkit-transform: matrix3d(0.99948, 0, 0, 0, 0, 0.99948, 0, 0, 0, 0, 1, 0, 0, -49.97405, 0, 1); }
  100% {
    opacity: 1;
    -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, -50, 0, 1); } }
@keyframes seawave {
  0% {
    transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  1.666667% {
    transform: matrix3d(0.19514, 0, 0, 0, 0, 0.19514, 0, 0, 0, 0, 1, 0, 0, -3.8179, 0, 1); }
  3.333333% {
    transform: matrix3d(0.48061, 0, 0, 0, 0, 0.48061, 0, 0, 0, 0, 1, 0, 0, -16.89184, 0, 1); }
  5% {
    transform: matrix3d(0.78868, 0, 0, 0, 0, 0.78868, 0, 0, 0, 0, 1, 0, 0, -35.82897, 0, 1); }
  6.666667% {
    transform: matrix3d(1.06298, 0, 0, 0, 0, 1.06298, 0, 0, 0, 0, 1, 0, 0, -54.24398, 0, 1); }
  8.333333% {
    transform: matrix3d(1.26541, 0, 0, 0, 0, 1.26541, 0, 0, 0, 0, 1, 0, 0, -67.42532, 0, 1); }
  10% {
    transform: matrix3d(1.37835, 0, 0, 0, 0, 1.37835, 0, 0, 0, 0, 1, 0, 0, -73.79667, 0, 1); }
  11.666667% {
    transform: matrix3d(1.40302, 0, 0, 0, 0, 1.40302, 0, 0, 0, 0, 1, 0, 0, -74.15221, 0, 1); }
  13.333333% {
    opacity: 1;
    transform: matrix3d(1.35507, 0, 0, 0, 0, 1.35507, 0, 0, 0, 0, 1, 0, 0, -70.32855, 0, 1); }
  15% {
    transform: matrix3d(1.25874, 0, 0, 0, 0, 1.25874, 0, 0, 0, 0, 1, 0, 0, -64.25506, 0, 1); }
  16.666667% {
    transform: matrix3d(1.14088, 0, 0, 0, 0, 1.14088, 0, 0, 0, 0, 1, 0, 0, -57.53621, 0, 1); }
  18.333333% {
    transform: matrix3d(1.02595, 0, 0, 0, 0, 1.02595, 0, 0, 0, 0, 1, 0, 0, -51.35907, 0, 1); }
  20% {
    transform: matrix3d(0.93241, 0, 0, 0, 0, 0.93241, 0, 0, 0, 0, 1, 0, 0, -46.51039, 0, 1); }
  21.666667% {
    transform: matrix3d(0.87106, 0, 0, 0, 0, 0.87106, 0, 0, 0, 0, 1, 0, 0, -43.40452, 0, 1); }
  23.333333% {
    transform: matrix3d(0.84491, 0, 0, 0, 0, 0.84491, 0, 0, 0, 0, 1, 0, 0, -42.11433, 0, 1); }
  25% {
    transform: matrix3d(0.85043, 0, 0, 0, 0, 0.85043, 0, 0, 0, 0, 1, 0, 0, -42.42524, 0, 1); }
  26.666667% {
    transform: matrix3d(0.87962, 0, 0, 0, 0, 0.87962, 0, 0, 0, 0, 1, 0, 0, -43.92027, 0, 1); }
  28.333333% {
    transform: matrix3d(0.92232, 0, 0, 0, 0, 0.92232, 0, 0, 0, 0, 1, 0, 0, -46.08478, 0, 1); }
  30% {
    transform: matrix3d(0.96839, 0, 0, 0, 0, 0.96839, 0, 0, 0, 0, 1, 0, 0, -48.40959, 0, 1); }
  31.666667% {
    transform: matrix3d(1.00942, 0, 0, 0, 0, 1.00942, 0, 0, 0, 0, 1, 0, 0, -50.47334, 0, 1); }
  33.333333% {
    transform: matrix3d(1.0397, 0, 0, 0, 0, 1.0397, 0, 0, 0, 0, 1, 0, 0, -51.99258, 0, 1); }
  35% {
    transform: matrix3d(1.05659, 0, 0, 0, 0, 1.05659, 0, 0, 0, 0, 1, 0, 0, -52.83794, 0, 1); }
  36.666667% {
    transform: matrix3d(1.06028, 0, 0, 0, 0, 1.06028, 0, 0, 0, 0, 1, 0, 0, -53.02083, 0, 1); }
  38.333333% {
    transform: matrix3d(1.05311, 0, 0, 0, 0, 1.05311, 0, 0, 0, 0, 1, 0, 0, -52.65993, 0, 1); }
  40% {
    transform: matrix3d(1.0387, 0, 0, 0, 0, 1.0387, 0, 0, 0, 0, 1, 0, 0, -51.93743, 0, 1); }
  41.666667% {
    transform: matrix3d(1.02107, 0, 0, 0, 0, 1.02107, 0, 0, 0, 0, 1, 0, 0, -51.05459, 0, 1); }
  43.333333% {
    transform: matrix3d(1.00388, 0, 0, 0, 0, 1.00388, 0, 0, 0, 0, 1, 0, 0, -50.19419, 0, 1); }
  45% {
    transform: matrix3d(0.98989, 0, 0, 0, 0, 0.98989, 0, 0, 0, 0, 1, 0, 0, -49.4943, 0, 1); }
  46.666667% {
    transform: matrix3d(0.98072, 0, 0, 0, 0, 0.98072, 0, 0, 0, 0, 1, 0, 0, -49.03539, 0, 1); }
  48.333333% {
    transform: matrix3d(0.9768, 0, 0, 0, 0, 0.9768, 0, 0, 0, 0, 1, 0, 0, -48.83983, 0, 1); }
  50% {
    transform: matrix3d(0.97763, 0, 0, 0, 0, 0.97763, 0, 0, 0, 0, 1, 0, 0, -48.88146, 0, 1); }
  51.666667% {
    transform: matrix3d(0.98199, 0, 0, 0, 0, 0.98199, 0, 0, 0, 0, 1, 0, 0, -49.09973, 0, 1); }
  53.333333% {
    transform: matrix3d(0.98838, 0, 0, 0, 0, 0.98838, 0, 0, 0, 0, 1, 0, 0, -49.41905, 0, 1); }
  55% {
    transform: matrix3d(0.99527, 0, 0, 0, 0, 0.99527, 0, 0, 0, 0, 1, 0, 0, -49.76363, 0, 1); }
  56.666667% {
    transform: matrix3d(1.00141, 0, 0, 0, 0, 1.00141, 0, 0, 0, 0, 1, 0, 0, -50.07044, 0, 1); }
  58.333333% {
    transform: matrix3d(1.00594, 0, 0, 0, 0, 1.00594, 0, 0, 0, 0, 1, 0, 0, -50.29687, 0, 1); }
  60% {
    transform: matrix3d(1.00846, 0, 0, 0, 0, 1.00846, 0, 0, 0, 0, 1, 0, 0, -50.4232, 0, 1); }
  61.666667% {
    transform: matrix3d(1.00902, 0, 0, 0, 0, 1.00902, 0, 0, 0, 0, 1, 0, 0, -50.4508, 0, 1); }
  63.333333% {
    transform: matrix3d(1.00794, 0, 0, 0, 0, 1.00794, 0, 0, 0, 0, 1, 0, 0, -50.39716, 0, 1); }
  65% {
    transform: matrix3d(1.00579, 0, 0, 0, 0, 1.00579, 0, 0, 0, 0, 1, 0, 0, -50.28941, 0, 1); }
  66.666667% {
    transform: matrix3d(1.00315, 0, 0, 0, 0, 1.00315, 0, 0, 0, 0, 1, 0, 0, -50.15758, 0, 1); }
  68.333333% {
    transform: matrix3d(1.00058, 0, 0, 0, 0, 1.00058, 0, 0, 0, 0, 1, 0, 0, -50.02902, 0, 1); }
  70% {
    transform: matrix3d(0.99849, 0, 0, 0, 0, 0.99849, 0, 0, 0, 0, 1, 0, 0, -49.9244, 0, 1); }
  71.666667% {
    transform: matrix3d(0.99712, 0, 0, 0, 0, 0.99712, 0, 0, 0, 0, 1, 0, 0, -49.85578, 0, 1); }
  73.333333% {
    transform: matrix3d(0.99653, 0, 0, 0, 0, 0.99653, 0, 0, 0, 0, 1, 0, 0, -49.82653, 0, 1); }
  75% {
    transform: matrix3d(0.99665, 0, 0, 0, 0, 0.99665, 0, 0, 0, 0, 1, 0, 0, -49.8327, 0, 1); }
  76.666667% {
    transform: matrix3d(0.99731, 0, 0, 0, 0, 0.99731, 0, 0, 0, 0, 1, 0, 0, -49.86535, 0, 1); }
  78.333333% {
    transform: matrix3d(0.99826, 0, 0, 0, 0, 0.99826, 0, 0, 0, 0, 1, 0, 0, -49.91311, 0, 1); }
  80% {
    transform: matrix3d(0.99929, 0, 0, 0, 0, 0.99929, 0, 0, 0, 0, 1, 0, 0, -49.96465, 0, 1); }
  81.666667% {
    transform: matrix3d(1.00021, 0, 0, 0, 0, 1.00021, 0, 0, 0, 0, 1, 0, 0, -50.01054, 0, 1); }
  83.333333% {
    transform: matrix3d(1.00089, 0, 0, 0, 0, 1.00089, 0, 0, 0, 0, 1, 0, 0, -50.0444, 0, 1); }
  85% {
    transform: matrix3d(1.00127, 0, 0, 0, 0, 1.00127, 0, 0, 0, 0, 1, 0, 0, -50.0633, 0, 1); }
  86.666667% {
    transform: matrix3d(1.00135, 0, 0, 0, 0, 1.00135, 0, 0, 0, 0, 1, 0, 0, -50.06743, 0, 1); }
  88.333333% {
    transform: matrix3d(1.00119, 0, 0, 0, 0, 1.00119, 0, 0, 0, 0, 1, 0, 0, -50.0594, 0, 1); }
  90% {
    transform: matrix3d(1.00087, 0, 0, 0, 0, 1.00087, 0, 0, 0, 0, 1, 0, 0, -50.04329, 0, 1); }
  91.666667% {
    transform: matrix3d(1.00047, 0, 0, 0, 0, 1.00047, 0, 0, 0, 0, 1, 0, 0, -50.02357, 0, 1); }
  93.333333% {
    transform: matrix3d(1.00009, 0, 0, 0, 0, 1.00009, 0, 0, 0, 0, 1, 0, 0, -50.00434, 0, 1); }
  95% {
    transform: matrix3d(0.99977, 0, 0, 0, 0, 0.99977, 0, 0, 0, 0, 1, 0, 0, -49.98869, 0, 1); }
  96.666667% {
    transform: matrix3d(0.99957, 0, 0, 0, 0, 0.99957, 0, 0, 0, 0, 1, 0, 0, -49.97843, 0, 1); }
  98.333333% {
    transform: matrix3d(0.99948, 0, 0, 0, 0, 0.99948, 0, 0, 0, 0, 1, 0, 0, -49.97405, 0, 1); }
  100% {
    opacity: 1;
    transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, -50, 0, 1); } }
